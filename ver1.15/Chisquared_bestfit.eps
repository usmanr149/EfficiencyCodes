%!PS-Adobe-2.0 EPSF-2.0
%%Title: Chisquared_bestfit.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Mon Mar 16 18:53:47 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Chisquared_bestfit.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (griffin)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Mar 16 18:53:47 2015)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
1220 840 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 840 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
1220 1280 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 1280 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 100)]
] -66.7 MRshow
1.000 UL
LTb
1220 1720 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 1720 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 200)]
] -66.7 MRshow
1.000 UL
LTb
1220 2160 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 2160 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 300)]
] -66.7 MRshow
1.000 UL
LTb
1220 2600 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 2600 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 400)]
] -66.7 MRshow
1.000 UL
LTb
1220 3040 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 3040 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 500)]
] -66.7 MRshow
1.000 UL
LTb
1220 3480 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 3480 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 600)]
] -66.7 MRshow
1.000 UL
LTb
1220 3920 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 3920 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 700)]
] -66.7 MRshow
1.000 UL
LTb
1220 4360 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 4360 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 800)]
] -66.7 MRshow
1.000 UL
LTb
1220 4800 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 4800 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 900)]
] -66.7 MRshow
1.000 UL
LTb
2572 840 M
0 63 V
0 3897 R
0 -63 V
stroke
2572 640 M
[ [(Helvetica) 200.0 0.0 true true 0 (140)]
] -66.7 MCshow
1.000 UL
LTb
5007 840 M
0 63 V
0 3897 R
0 -63 V
stroke
5007 640 M
[ [(Helvetica) 200.0 0.0 true true 0 (230)]
] -66.7 MCshow
1.000 UL
LTb
1490 840 M
0 63 V
0 3897 R
0 -63 V
stroke
1490 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 100)]
] -66.7 MCshow
1.000 UL
LTb
2843 840 M
0 63 V
0 3897 R
0 -63 V
stroke
2843 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 150)]
] -66.7 MCshow
1.000 UL
LTb
4195 840 M
0 63 V
0 3897 R
0 -63 V
stroke
4195 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 200)]
] -66.7 MCshow
1.000 UL
LTb
5548 840 M
0 63 V
0 3897 R
0 -63 V
stroke
5548 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 250)]
] -66.7 MCshow
1.000 UL
LTb
6900 840 M
0 63 V
0 3897 R
0 -63 V
stroke
6900 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 300)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1220 4800 N
0 -3960 V
5680 0 V
0 3960 V
-5680 0 V
Z stroke
LCb setrgbcolor
400 2820 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Symbol) 200.0 0.0 true true 0 (c)]
[(Helvetica) 160.0 100.0 true true 0 (2)]
[(Helvetica) 160.0 -60.0 true true 0 (min.)]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
4060 340 M
[ [(Helvetica) 200.0 0.0 true true 0 (E)]
[(Helvetica) 160.0 -60.0 true true 0 (0)]
[(Helvetica) 200.0 0.0 true true 0 ( [keV])]
] -46.7 MCshow
LTb
1.000 UP
2843 3480 M
[ [(Italic) 200.0 0.0 true true 0 (c)]
[(Helvetica) 160.0 -60.0 true true 0 (0)]
[(Helvetica) 200.0 0.0 true true 0 (=2.02x10)]
[(Helvetica) 160.0 100.0 true true 0 (3)]
] -66.7 MLshow
2843 3260 M
[ [(Italic) 200.0 0.0 true true 0 (c)]
[(Helvetica) 160.0 -60.0 true true 0 (1)]
[(Helvetica) 200.0 0.0 true true 0 (=-2.03x10)]
[(Helvetica) 160.0 100.0 true true 0 (1)]
] -66.7 MLshow
2843 3040 M
[ [(Italic) 200.0 0.0 true true 0 (c)]
[(Helvetica) 160.0 -60.0 true true 0 (2)]
[(Helvetica) 200.0 0.0 true true 0 (=4.70x10)]
[(Helvetica) 160.0 100.0 true true 0 (-2)]
] -66.7 MLshow
2843 2820 M
[ [(Italic) 200.0 0.0 true true 0 (c)]
[(Helvetica) 160.0 -60.0 true true 0 (4)]
[(Helvetica) 200.0 0.0 true true 0 (=7.45x10)]
[(Helvetica) 160.0 100.0 true true 0 (-6)]
] -66.7 MLshow
1.000 UL
LTb
LC6 setrgbcolor
2572 840 M
0 1409 V
stroke
LTb
LC6 setrgbcolor
5007 840 M
0 448 V
stroke
LTb
1.000 UP
1.000 UL
LT0
LTb
5997 4637 M
[ [(Symbol) 200.0 0.0 true true 0 (c)]
[(Helvetica) 160.0 100.0 true true 0 (2)]
] -86.7 MRshow
LT0
1247 2197 Pls
1274 2172 Pls
1301 2152 Pls
1328 2137 Pls
1355 2126 Pls
1382 2116 Pls
1409 2108 Pls
1436 2102 Pls
1463 2097 Pls
1490 2092 Pls
1517 2089 Pls
1545 2086 Pls
1572 2083 Pls
1599 2081 Pls
1626 2079 Pls
1653 2077 Pls
1680 2075 Pls
1707 2074 Pls
1734 2073 Pls
1761 2072 Pls
1788 2071 Pls
1815 2070 Pls
1842 2069 Pls
1869 2068 Pls
1896 2068 Pls
1923 2067 Pls
1950 2067 Pls
1977 2066 Pls
2004 2066 Pls
2031 2066 Pls
2058 2065 Pls
2085 2065 Pls
2113 2062 Pls
2140 2056 Pls
2167 2047 Pls
2194 2036 Pls
2221 2023 Pls
2248 2008 Pls
2275 1991 Pls
2302 1973 Pls
2329 1954 Pls
2356 1934 Pls
2383 1913 Pls
2410 1891 Pls
2437 1869 Pls
2464 1846 Pls
2491 1823 Pls
2518 1799 Pls
2545 1776 Pls
2572 1752 Pls
2599 1728 Pls
2626 1704 Pls
2653 1680 Pls
2681 1656 Pls
2708 1632 Pls
2735 1609 Pls
2762 1585 Pls
2789 1562 Pls
2816 1539 Pls
2843 1517 Pls
2870 1494 Pls
2897 1473 Pls
2924 1451 Pls
2951 1430 Pls
2978 1409 Pls
3005 1389 Pls
3032 1369 Pls
3059 1350 Pls
3086 1331 Pls
3113 1313 Pls
3140 1295 Pls
3167 1278 Pls
3194 1261 Pls
3221 1245 Pls
3249 1229 Pls
3276 1214 Pls
3303 1199 Pls
3330 1185 Pls
3357 1171 Pls
3384 1159 Pls
3411 1146 Pls
3438 1134 Pls
3465 1123 Pls
3492 1112 Pls
3519 1102 Pls
3546 1093 Pls
3573 1084 Pls
3600 1075 Pls
3627 1067 Pls
3654 1060 Pls
3681 1053 Pls
3708 1047 Pls
3735 1042 Pls
3762 1036 Pls
3789 1032 Pls
3817 1028 Pls
3844 1024 Pls
3871 1021 Pls
3898 1019 Pls
3925 1017 Pls
3952 1016 Pls
3979 1015 Pls
4006 1014 Pls
4033 1014 Pls
4060 1015 Pls
4087 1016 Pls
4114 1017 Pls
4141 1019 Pls
4168 1022 Pls
4195 1024 Pls
4222 1028 Pls
4249 1031 Pls
4276 1035 Pls
4303 1040 Pls
4330 1045 Pls
4357 1050 Pls
4385 1056 Pls
4412 1062 Pls
4439 1069 Pls
4466 1075 Pls
4493 1083 Pls
4520 1090 Pls
4547 1098 Pls
4574 1106 Pls
4601 1115 Pls
4628 1124 Pls
4655 1133 Pls
4682 1143 Pls
4709 1152 Pls
4736 1163 Pls
4763 1173 Pls
4790 1184 Pls
4817 1195 Pls
4844 1206 Pls
4871 1217 Pls
4898 1229 Pls
4925 1241 Pls
4953 1253 Pls
4980 1266 Pls
5007 1278 Pls
5034 1291 Pls
5061 1304 Pls
5088 1318 Pls
5115 1331 Pls
5142 1345 Pls
5169 1359 Pls
5196 1373 Pls
5223 1387 Pls
5250 1401 Pls
5277 1416 Pls
5304 1431 Pls
5331 1445 Pls
5358 1460 Pls
5385 1475 Pls
5412 1491 Pls
5439 1506 Pls
5466 1521 Pls
5493 1536 Pls
5521 1552 Pls
5548 1567 Pls
5575 1582 Pls
5602 1597 Pls
5629 1612 Pls
5656 1627 Pls
5683 1642 Pls
5710 1656 Pls
5737 1671 Pls
5764 1686 Pls
5791 1700 Pls
5818 1715 Pls
5845 1729 Pls
5872 1744 Pls
5899 1758 Pls
5926 1772 Pls
5953 1787 Pls
5980 1801 Pls
6007 1815 Pls
6034 1829 Pls
6061 1843 Pls
6089 1856 Pls
6116 1870 Pls
6143 1884 Pls
6170 1898 Pls
6197 1911 Pls
6224 1925 Pls
6251 1938 Pls
6278 1951 Pls
6305 1965 Pls
6332 1978 Pls
6359 1991 Pls
6386 2004 Pls
6413 2017 Pls
6440 2030 Pls
6467 2043 Pls
6494 2056 Pls
6521 2069 Pls
6548 2082 Pls
6575 2095 Pls
6602 2107 Pls
6629 2120 Pls
6657 2133 Pls
6684 2145 Pls
6711 2158 Pls
6738 2171 Pls
6765 2183 Pls
6792 2195 Pls
6819 2208 Pls
6846 2220 Pls
6873 2233 Pls
6900 2245 Pls
4017 1014 Pls
6388 4637 Pls
1.000 UL
LT2
LTb
5997 4437 M
[ [(Helvetica) 200.0 0.0 true true 0 (Best-fit)]
] -66.7 MRshow
LT2
6117 4437 M
543 0 V
1220 4734 M
57 -173 V
58 -169 V
57 -163 V
57 -159 V
58 -153 V
57 -149 V
58 -145 V
57 -139 V
57 -135 V
58 -131 V
57 -126 V
57 -122 V
58 -117 V
57 -114 V
58 -109 V
57 -104 V
57 -101 V
58 -97 V
57 -92 V
57 -89 V
58 -85 V
57 -81 V
58 -78 V
57 -73 V
57 -70 V
58 -67 V
57 -63 V
57 -59 V
58 -57 V
57 -52 V
58 -50 V
57 -46 V
57 -43 V
58 -40 V
57 -37 V
57 -34 V
58 -32 V
57 -28 V
58 -25 V
57 -23 V
57 -20 V
58 -17 V
57 -15 V
57 -12 V
58 -10 V
57 -7 V
58 -5 V
57 -3 V
57 -1 V
58 2 V
57 4 V
57 5 V
58 8 V
57 10 V
58 11 V
57 14 V
57 15 V
58 17 V
57 18 V
57 20 V
58 22 V
57 23 V
58 24 V
57 26 V
57 27 V
58 28 V
57 30 V
57 30 V
58 32 V
57 33 V
58 33 V
57 35 V
57 35 V
58 36 V
57 37 V
57 37 V
58 38 V
57 38 V
58 39 V
57 40 V
57 39 V
58 40 V
57 41 V
57 40 V
58 41 V
57 40 V
58 41 V
57 40 V
57 41 V
58 40 V
57 40 V
57 40 V
58 39 V
57 39 V
58 39 V
57 38 V
57 37 V
58 37 V
57 36 V
stroke
LTb
1220 4800 N
0 -3960 V
5680 0 V
0 3960 V
-5680 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Italic Symbol Helvetica
