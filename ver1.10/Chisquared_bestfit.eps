%!PS-Adobe-2.0 EPSF-2.0
%%Title: Chisquared_bestfit.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Thu Feb  5 10:55:59 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Chisquared_bestfit.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (griffin)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Feb  5 10:55:59 2015)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
1220 840 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 840 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
1220 1406 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 1406 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 100)]
] -66.7 MRshow
1.000 UL
LTb
1220 1971 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 1971 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 200)]
] -66.7 MRshow
1.000 UL
LTb
1220 2537 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 2537 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 300)]
] -66.7 MRshow
1.000 UL
LTb
1220 3103 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 3103 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 400)]
] -66.7 MRshow
1.000 UL
LTb
1220 3669 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 3669 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 500)]
] -66.7 MRshow
1.000 UL
LTb
1220 4234 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 4234 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 600)]
] -66.7 MRshow
1.000 UL
LTb
1220 4800 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 4800 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 700)]
] -66.7 MRshow
1.000 UL
LTb
2302 840 M
0 63 V
0 3897 R
0 -63 V
stroke
2302 640 M
[ [(Helvetica) 200.0 0.0 true true 0 (130)]
] -66.7 MCshow
1.000 UL
LTb
5007 840 M
0 63 V
0 3897 R
0 -63 V
stroke
5007 640 M
[ [(Helvetica) 200.0 0.0 true true 0 (230)]
] -66.7 MCshow
1.000 UL
LTb
1490 840 M
0 63 V
0 3897 R
0 -63 V
stroke
1490 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 100)]
] -66.7 MCshow
1.000 UL
LTb
2843 840 M
0 63 V
0 3897 R
0 -63 V
stroke
2843 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 150)]
] -66.7 MCshow
1.000 UL
LTb
4195 840 M
0 63 V
0 3897 R
0 -63 V
stroke
4195 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 200)]
] -66.7 MCshow
1.000 UL
LTb
5548 840 M
0 63 V
0 3897 R
0 -63 V
stroke
5548 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 250)]
] -66.7 MCshow
1.000 UL
LTb
6900 840 M
0 63 V
0 3897 R
0 -63 V
stroke
6900 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 300)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1220 4800 N
0 -3960 V
5680 0 V
0 3960 V
-5680 0 V
Z stroke
LCb setrgbcolor
400 2820 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Symbol) 200.0 0.0 true true 0 (c)]
[(Helvetica) 160.0 100.0 true true 0 (2)]
[(Helvetica) 160.0 -60.0 true true 0 (min.)]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
4060 340 M
[ [(Helvetica) 200.0 0.0 true true 0 (E)]
[(Helvetica) 160.0 -60.0 true true 0 (0)]
[(Helvetica) 200.0 0.0 true true 0 ( [keV])]
] -46.7 MCshow
LTb
1.000 UP
2843 4234 M
[ [(Italic) 200.0 0.0 true true 0 (c)]
[(Helvetica) 160.0 -60.0 true true 0 (0)]
[(Helvetica) 200.0 0.0 true true 0 (=2.02x10)]
[(Helvetica) 160.0 100.0 true true 0 (3)]
] -66.7 MLshow
2843 3951 M
[ [(Italic) 200.0 0.0 true true 0 (c)]
[(Helvetica) 160.0 -60.0 true true 0 (1)]
[(Helvetica) 200.0 0.0 true true 0 (=-2.03x10)]
[(Helvetica) 160.0 100.0 true true 0 (1)]
] -66.7 MLshow
2843 3669 M
[ [(Italic) 200.0 0.0 true true 0 (c)]
[(Helvetica) 160.0 -60.0 true true 0 (2)]
[(Helvetica) 200.0 0.0 true true 0 (=4.70x10)]
[(Helvetica) 160.0 100.0 true true 0 (-2)]
] -66.7 MLshow
2843 3386 M
[ [(Italic) 200.0 0.0 true true 0 (c)]
[(Helvetica) 160.0 -60.0 true true 0 (4)]
[(Helvetica) 200.0 0.0 true true 0 (=7.45x10)]
[(Helvetica) 160.0 100.0 true true 0 (-6)]
] -66.7 MLshow
1.000 UL
LTb
LC6 setrgbcolor
2302 840 M
0 1522 V
stroke
LTb
LC6 setrgbcolor
5007 840 M
0 590 V
stroke
LTb
1.000 UP
1.000 UL
LT0
LTb
5997 4637 M
[ [(Symbol) 200.0 0.0 true true 0 (c)]
[(Helvetica) 160.0 100.0 true true 0 (2)]
] -86.7 MRshow
LT0
1247 2585 Pls
1274 2552 Pls
1301 2527 Pls
1328 2508 Pls
1355 2493 Pls
1382 2481 Pls
1409 2471 Pls
1436 2463 Pls
1463 2456 Pls
1490 2450 Pls
1517 2445 Pls
1545 2441 Pls
1572 2438 Pls
1599 2435 Pls
1626 2432 Pls
1653 2430 Pls
1680 2428 Pls
1707 2426 Pls
1734 2425 Pls
1761 2424 Pls
1788 2422 Pls
1815 2421 Pls
1842 2420 Pls
1869 2419 Pls
1896 2419 Pls
1923 2418 Pls
1950 2417 Pls
1977 2417 Pls
2004 2416 Pls
2031 2416 Pls
2058 2415 Pls
2085 2415 Pls
2113 2411 Pls
2140 2403 Pls
2167 2392 Pls
2194 2378 Pls
2221 2361 Pls
2248 2341 Pls
2275 2320 Pls
2302 2297 Pls
2329 2272 Pls
2356 2246 Pls
2383 2219 Pls
2410 2191 Pls
2437 2163 Pls
2464 2133 Pls
2491 2104 Pls
2518 2073 Pls
2545 2043 Pls
2572 2012 Pls
2599 1981 Pls
2626 1951 Pls
2653 1920 Pls
2681 1889 Pls
2708 1859 Pls
2735 1828 Pls
2762 1798 Pls
2789 1768 Pls
2816 1739 Pls
2843 1710 Pls
2870 1681 Pls
2897 1653 Pls
2924 1626 Pls
2951 1599 Pls
2978 1572 Pls
3005 1546 Pls
3032 1520 Pls
3059 1496 Pls
3086 1471 Pls
3113 1448 Pls
3140 1425 Pls
3167 1403 Pls
3194 1381 Pls
3221 1360 Pls
3249 1340 Pls
3276 1320 Pls
3303 1302 Pls
3330 1284 Pls
3357 1266 Pls
3384 1250 Pls
3411 1234 Pls
3438 1218 Pls
3465 1204 Pls
3492 1190 Pls
3519 1177 Pls
3546 1165 Pls
3573 1153 Pls
3600 1143 Pls
3627 1132 Pls
3654 1123 Pls
3681 1114 Pls
3708 1106 Pls
3735 1099 Pls
3762 1093 Pls
3789 1087 Pls
3817 1082 Pls
3844 1077 Pls
3871 1073 Pls
3898 1070 Pls
3925 1068 Pls
3952 1066 Pls
3979 1065 Pls
4006 1064 Pls
4033 1064 Pls
4060 1065 Pls
4087 1066 Pls
4114 1068 Pls
4141 1070 Pls
4168 1073 Pls
4195 1077 Pls
4222 1081 Pls
4249 1086 Pls
4276 1091 Pls
4303 1097 Pls
4330 1103 Pls
4357 1110 Pls
4385 1118 Pls
4412 1125 Pls
4439 1134 Pls
4466 1143 Pls
4493 1152 Pls
4520 1162 Pls
4547 1172 Pls
4574 1182 Pls
4601 1194 Pls
4628 1205 Pls
4655 1217 Pls
4682 1229 Pls
4709 1242 Pls
4736 1255 Pls
4763 1268 Pls
4790 1282 Pls
4817 1296 Pls
4844 1310 Pls
4871 1325 Pls
4898 1340 Pls
4925 1356 Pls
4953 1371 Pls
4980 1387 Pls
5007 1404 Pls
5034 1420 Pls
5061 1437 Pls
5088 1454 Pls
5115 1471 Pls
5142 1489 Pls
5169 1507 Pls
5196 1525 Pls
5223 1543 Pls
5250 1562 Pls
5277 1580 Pls
5304 1599 Pls
5331 1618 Pls
5358 1638 Pls
5385 1657 Pls
5412 1677 Pls
5439 1696 Pls
5466 1716 Pls
5493 1735 Pls
5521 1755 Pls
5548 1774 Pls
5575 1794 Pls
5602 1813 Pls
5629 1832 Pls
5656 1852 Pls
5683 1871 Pls
5710 1890 Pls
5737 1909 Pls
5764 1927 Pls
5791 1946 Pls
5818 1965 Pls
5845 1984 Pls
5872 2002 Pls
5899 2020 Pls
5926 2039 Pls
5953 2057 Pls
5980 2075 Pls
6007 2093 Pls
6034 2111 Pls
6061 2129 Pls
6089 2147 Pls
6116 2165 Pls
6143 2182 Pls
6170 2200 Pls
6197 2217 Pls
6224 2234 Pls
6251 2252 Pls
6278 2269 Pls
6305 2286 Pls
6332 2303 Pls
6359 2320 Pls
6386 2337 Pls
6413 2354 Pls
6440 2370 Pls
6467 2387 Pls
6494 2404 Pls
6521 2420 Pls
6548 2437 Pls
6575 2453 Pls
6602 2470 Pls
6629 2486 Pls
6657 2502 Pls
6684 2518 Pls
6711 2535 Pls
6738 2551 Pls
6765 2567 Pls
6792 2583 Pls
6819 2599 Pls
6846 2615 Pls
6873 2631 Pls
6900 2646 Pls
4073 1065 Pls
6388 4637 Pls
1.000 UL
LT2
LTb
5997 4437 M
[ [(Helvetica) 200.0 0.0 true true 0 (Best-fit)]
] -66.7 MRshow
LT2
6117 4437 M
543 0 V
1220 4415 M
57 -133 V
58 -129 V
57 -128 V
57 -124 V
58 -122 V
57 -119 V
58 -117 V
57 -114 V
57 -111 V
58 -109 V
57 -106 V
57 -103 V
58 -101 V
57 -98 V
58 -96 V
57 -92 V
57 -90 V
58 -88 V
57 -84 V
57 -82 V
58 -80 V
57 -76 V
58 -74 V
57 -72 V
57 -68 V
58 -66 V
57 -64 V
57 -60 V
58 -58 V
57 -55 V
58 -52 V
57 -50 V
57 -47 V
58 -44 V
57 -42 V
57 -39 V
58 -36 V
57 -34 V
58 -30 V
57 -28 V
57 -25 V
58 -23 V
57 -20 V
57 -17 V
58 -14 V
57 -12 V
58 -9 V
57 -6 V
57 -3 V
58 -1 V
57 2 V
57 5 V
58 8 V
57 10 V
58 14 V
57 16 V
57 18 V
58 22 V
57 24 V
57 27 V
58 30 V
57 32 V
58 36 V
57 38 V
57 41 V
58 43 V
57 47 V
57 49 V
58 52 V
57 55 V
58 58 V
57 60 V
57 64 V
58 66 V
57 69 V
57 71 V
58 75 V
57 77 V
58 80 V
57 83 V
57 86 V
58 89 V
57 91 V
57 94 V
58 98 V
57 100 V
58 102 V
57 106 V
57 108 V
58 112 V
57 114 V
57 117 V
58 120 V
57 123 V
58 125 V
57 129 V
57 131 V
58 134 V
57 137 V
stroke
LTb
1220 4800 N
0 -3960 V
5680 0 V
0 3960 V
-5680 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Italic Symbol Helvetica
