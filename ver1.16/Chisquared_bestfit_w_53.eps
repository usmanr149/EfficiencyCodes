%!PS-Adobe-2.0 EPSF-2.0
%%Title: Chisquared_bestfit.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Tue Mar 24 09:33:45 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Chisquared_bestfit.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (griffin)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Mar 24 09:33:45 2015)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
1340 840 M
63 0 V
5497 0 R
-63 0 V
stroke
1220 840 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
1340 1406 M
63 0 V
5497 0 R
-63 0 V
stroke
1220 1406 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 200)]
] -66.7 MRshow
1.000 UL
LTb
1340 1971 M
63 0 V
5497 0 R
-63 0 V
stroke
1220 1971 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 400)]
] -66.7 MRshow
1.000 UL
LTb
1340 2537 M
63 0 V
5497 0 R
-63 0 V
stroke
1220 2537 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 600)]
] -66.7 MRshow
1.000 UL
LTb
1340 3103 M
63 0 V
5497 0 R
-63 0 V
stroke
1220 3103 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 800)]
] -66.7 MRshow
1.000 UL
LTb
1340 3669 M
63 0 V
5497 0 R
-63 0 V
stroke
1220 3669 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1000)]
] -66.7 MRshow
1.000 UL
LTb
1340 4234 M
63 0 V
5497 0 R
-63 0 V
stroke
1220 4234 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1200)]
] -66.7 MRshow
1.000 UL
LTb
1340 4800 M
63 0 V
5497 0 R
-63 0 V
stroke
1220 4800 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1400)]
] -66.7 MRshow
1.000 UL
LTb
1605 840 M
0 63 V
0 3897 R
0 -63 V
stroke
1605 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 100)]
] -66.7 MCshow
1.000 UL
LTb
2929 840 M
0 63 V
0 3897 R
0 -63 V
stroke
2929 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 150)]
] -66.7 MCshow
1.000 UL
LTb
4252 840 M
0 63 V
0 3897 R
0 -63 V
stroke
4252 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 200)]
] -66.7 MCshow
1.000 UL
LTb
5576 840 M
0 63 V
0 3897 R
0 -63 V
stroke
5576 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 250)]
] -66.7 MCshow
1.000 UL
LTb
6900 840 M
0 63 V
0 3897 R
0 -63 V
stroke
6900 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 300)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1340 4800 N
0 -3960 V
5560 0 V
0 3960 V
-5560 0 V
Z stroke
LCb setrgbcolor
400 2820 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Symbol) 200.0 0.0 true true 0 (c)]
[(Helvetica) 160.0 100.0 true true 0 (2)]
[(Helvetica) 160.0 -60.0 true true 0 (min.)]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
4120 340 M
[ [(Helvetica) 200.0 0.0 true true 0 (E)]
[(Helvetica) 160.0 -60.0 true true 0 (0)]
[(Helvetica) 200.0 0.0 true true 0 ( [keV])]
] -46.7 MCshow
LTb
1.000 UP
2929 3386 M
[ [(Italic) 200.0 0.0 true true 0 (c)]
[(Helvetica) 160.0 -60.0 true true 0 (0)]
[(Helvetica) 200.0 0.0 true true 0 (=2.77x10)]
[(Helvetica) 160.0 100.0 true true 0 (3)]
] -66.7 MLshow
2929 3103 M
[ [(Italic) 200.0 0.0 true true 0 (c)]
[(Helvetica) 160.0 -60.0 true true 0 (1)]
[(Helvetica) 200.0 0.0 true true 0 (=-3.19x10)]
[(Helvetica) 160.0 100.0 true true 0 (1)]
] -66.7 MLshow
2929 2820 M
[ [(Italic) 200.0 0.0 true true 0 (c)]
[(Helvetica) 160.0 -60.0 true true 0 (2)]
[(Helvetica) 200.0 0.0 true true 0 (=1.09x10)]
[(Helvetica) 160.0 100.0 true true 0 (-2)]
] -66.7 MLshow
2929 2537 M
[ [(Italic) 200.0 0.0 true true 0 (c)]
[(Helvetica) 160.0 -60.0 true true 0 (3)]
[(Helvetica) 200.0 0.0 true true 0 (=7.2x10)]
[(Helvetica) 160.0 100.0 true true 0 (-5)]
] -66.7 MLshow
1.000 UL
LTb
LC6 setrgbcolor
3193 840 M
0 469 V
stroke
LTb
LC6 setrgbcolor
4252 840 M
0 519 V
stroke
LTb
1.000 UP
1.000 UL
LT0
LTb
5997 4637 M
[ [(Symbol) 200.0 0.0 true true 0 (c)]
[(Helvetica) 160.0 100.0 true true 0 (2)]
] -86.7 MRshow
LT0
1366 4338 Pls
1393 4145 Pls
1419 3953 Pls
1446 3764 Pls
1472 3581 Pls
1499 3405 Pls
1525 3236 Pls
1552 3077 Pls
1578 2926 Pls
1605 2786 Pls
1631 2655 Pls
1658 2535 Pls
1684 2424 Pls
1711 2324 Pls
1737 2232 Pls
1764 2149 Pls
1790 2075 Pls
1817 2008 Pls
1843 1949 Pls
1869 1896 Pls
1896 1850 Pls
1922 1809 Pls
1949 1774 Pls
1975 1744 Pls
2002 1718 Pls
2028 1696 Pls
2055 1678 Pls
2081 1663 Pls
2108 1651 Pls
2134 1642 Pls
2161 1635 Pls
2187 1631 Pls
2214 1626 Pls
2240 1622 Pls
2267 1617 Pls
2293 1611 Pls
2320 1605 Pls
2346 1598 Pls
2373 1591 Pls
2399 1584 Pls
2425 1575 Pls
2452 1567 Pls
2478 1558 Pls
2505 1549 Pls
2531 1540 Pls
2558 1530 Pls
2584 1520 Pls
2611 1510 Pls
2637 1500 Pls
2664 1490 Pls
2690 1480 Pls
2717 1469 Pls
2743 1459 Pls
2770 1449 Pls
2796 1438 Pls
2823 1428 Pls
2849 1418 Pls
2876 1408 Pls
2902 1399 Pls
2929 1389 Pls
2955 1380 Pls
2981 1371 Pls
3008 1362 Pls
3034 1353 Pls
3061 1345 Pls
3087 1337 Pls
3114 1329 Pls
3140 1322 Pls
3167 1315 Pls
3193 1308 Pls
3220 1302 Pls
3246 1296 Pls
3273 1290 Pls
3299 1285 Pls
3326 1280 Pls
3352 1275 Pls
3379 1271 Pls
3405 1267 Pls
3432 1264 Pls
3458 1261 Pls
3485 1258 Pls
3511 1256 Pls
3537 1254 Pls
3564 1253 Pls
3590 1252 Pls
3617 1252 Pls
3643 1252 Pls
3670 1252 Pls
3696 1253 Pls
3723 1254 Pls
3749 1255 Pls
3776 1257 Pls
3802 1260 Pls
3829 1262 Pls
3855 1265 Pls
3882 1269 Pls
3908 1273 Pls
3935 1277 Pls
3961 1282 Pls
3988 1287 Pls
4014 1293 Pls
4041 1298 Pls
4067 1305 Pls
4093 1311 Pls
4120 1318 Pls
4146 1326 Pls
4173 1333 Pls
4199 1341 Pls
4226 1350 Pls
4252 1358 Pls
4279 1368 Pls
4305 1377 Pls
4332 1387 Pls
4358 1397 Pls
4385 1407 Pls
4411 1418 Pls
4438 1429 Pls
4464 1440 Pls
4491 1451 Pls
4517 1463 Pls
4544 1475 Pls
4570 1488 Pls
4597 1500 Pls
4623 1513 Pls
4649 1526 Pls
4676 1540 Pls
4702 1553 Pls
4729 1567 Pls
4755 1581 Pls
4782 1595 Pls
4808 1610 Pls
4835 1625 Pls
4861 1640 Pls
4888 1655 Pls
4914 1670 Pls
4941 1686 Pls
4967 1701 Pls
4994 1717 Pls
5020 1733 Pls
5047 1749 Pls
5073 1766 Pls
5100 1782 Pls
5126 1799 Pls
5153 1816 Pls
5179 1833 Pls
5205 1850 Pls
5232 1867 Pls
5258 1884 Pls
5285 1902 Pls
5311 1920 Pls
5338 1937 Pls
5364 1955 Pls
5391 1973 Pls
5417 1991 Pls
5444 2009 Pls
5470 2027 Pls
5497 2045 Pls
5523 2063 Pls
5550 2081 Pls
5576 2099 Pls
5603 2116 Pls
5629 2134 Pls
5656 2152 Pls
5682 2169 Pls
5709 2186 Pls
5735 2204 Pls
5761 2221 Pls
5788 2238 Pls
5814 2255 Pls
5841 2272 Pls
5867 2289 Pls
5894 2305 Pls
5920 2322 Pls
5947 2338 Pls
5973 2355 Pls
6000 2371 Pls
6026 2387 Pls
6053 2404 Pls
6079 2420 Pls
6106 2436 Pls
6132 2452 Pls
6159 2467 Pls
6185 2483 Pls
6212 2499 Pls
6238 2514 Pls
6265 2529 Pls
6291 2545 Pls
6317 2560 Pls
6344 2575 Pls
6370 2590 Pls
6397 2605 Pls
6423 2620 Pls
6450 2635 Pls
6476 2650 Pls
6503 2664 Pls
6529 2679 Pls
6556 2694 Pls
6582 2708 Pls
6609 2722 Pls
6635 2737 Pls
6662 2751 Pls
6688 2765 Pls
6715 2779 Pls
6741 2793 Pls
6768 2807 Pls
6794 2821 Pls
6821 2835 Pls
6847 2849 Pls
6873 2863 Pls
6900 2876 Pls
6388 4637 Pls
1.000 UL
LT2
LTb
5997 4437 M
[ [(Helvetica) 200.0 0.0 true true 0 (Best-fit)]
] -66.7 MRshow
LT2
6117 4437 M
543 0 V
1340 2901 M
56 -83 V
56 -80 V
56 -78 V
57 -76 V
56 -74 V
56 -72 V
56 -69 V
56 -67 V
56 -65 V
57 -63 V
56 -60 V
56 -59 V
56 -56 V
56 -54 V
56 -52 V
57 -50 V
56 -47 V
56 -46 V
56 -44 V
56 -41 V
56 -39 V
57 -38 V
56 -35 V
56 -34 V
56 -31 V
56 -29 V
56 -27 V
57 -26 V
56 -23 V
56 -22 V
56 -19 V
56 -18 V
56 -15 V
56 -14 V
57 -12 V
56 -10 V
56 -8 V
56 -6 V
56 -4 V
56 -3 V
57 0 V
56 1 V
56 3 V
56 5 V
56 6 V
56 8 V
57 10 V
56 12 V
56 14 V
56 15 V
56 17 V
56 19 V
57 20 V
56 22 V
56 24 V
56 25 V
56 27 V
56 29 V
57 30 V
56 32 V
56 33 V
56 35 V
56 37 V
56 38 V
57 40 V
56 41 V
56 43 V
56 44 V
56 46 V
56 47 V
56 49 V
57 50 V
56 52 V
56 53 V
56 54 V
56 56 V
56 58 V
57 59 V
56 60 V
56 61 V
56 63 V
56 64 V
56 66 V
57 67 V
56 68 V
56 70 V
56 71 V
56 72 V
56 73 V
57 75 V
56 76 V
56 77 V
56 78 V
56 80 V
56 81 V
57 82 V
56 83 V
56 84 V
56 86 V
stroke
LTb
1340 4800 N
0 -3960 V
5560 0 V
0 3960 V
-5560 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Italic Symbol Helvetica
