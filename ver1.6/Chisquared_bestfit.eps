%!PS-Adobe-2.0 EPSF-2.0
%%Title: Chisquared_bestfit.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Wed Oct 15 12:12:54 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Chisquared_bestfit.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (griffin)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Oct 15 12:12:54 2014)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
1100 840 M
63 0 V
5737 0 R
-63 0 V
stroke
980 840 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 5)]
] -66.7 MRshow
1.000 UL
LTb
1100 1406 M
63 0 V
5737 0 R
-63 0 V
stroke
980 1406 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 6)]
] -66.7 MRshow
1.000 UL
LTb
1100 1971 M
63 0 V
5737 0 R
-63 0 V
stroke
980 1971 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 7)]
] -66.7 MRshow
1.000 UL
LTb
1100 2537 M
63 0 V
5737 0 R
-63 0 V
stroke
980 2537 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 8)]
] -66.7 MRshow
1.000 UL
LTb
1100 3103 M
63 0 V
5737 0 R
-63 0 V
stroke
980 3103 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 9)]
] -66.7 MRshow
1.000 UL
LTb
1100 3669 M
63 0 V
5737 0 R
-63 0 V
stroke
980 3669 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 10)]
] -66.7 MRshow
1.000 UL
LTb
1100 4234 M
63 0 V
5737 0 R
-63 0 V
stroke
980 4234 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 11)]
] -66.7 MRshow
1.000 UL
LTb
1100 4800 M
63 0 V
5737 0 R
-63 0 V
stroke
980 4800 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 12)]
] -66.7 MRshow
1.000 UL
LTb
1100 840 M
0 63 V
0 3897 R
0 -63 V
stroke
1100 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 100)]
] -66.7 MCshow
1.000 UL
LTb
2067 840 M
0 63 V
0 3897 R
0 -63 V
stroke
2067 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 150)]
] -66.7 MCshow
1.000 UL
LTb
3033 840 M
0 63 V
0 3897 R
0 -63 V
stroke
3033 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 200)]
] -66.7 MCshow
1.000 UL
LTb
4000 840 M
0 63 V
0 3897 R
0 -63 V
stroke
4000 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 250)]
] -66.7 MCshow
1.000 UL
LTb
4967 840 M
0 63 V
0 3897 R
0 -63 V
stroke
4967 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 300)]
] -66.7 MCshow
1.000 UL
LTb
5933 840 M
0 63 V
0 3897 R
0 -63 V
stroke
5933 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 350)]
] -66.7 MCshow
1.000 UL
LTb
6900 840 M
0 63 V
0 3897 R
0 -63 V
stroke
6900 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 400)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1100 4800 N
0 -3960 V
5800 0 V
0 3960 V
-5800 0 V
Z stroke
LCb setrgbcolor
400 2820 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Symbol) 200.0 0.0 true true 0 (c)]
[(Helvetica) 160.0 100.0 true true 0 (2)]
[(Helvetica) 200.0 0.0 true true 0 (/f)]
] -86.7 MCshow
grestore
LTb
LCb setrgbcolor
4000 340 M
[ [(Helvetica) 200.0 0.0 true true 0 (E)]
[(Helvetica) 160.0 -60.0 true true 0 (0)]
[(Helvetica) 200.0 0.0 true true 0 ( [keV])]
] -46.7 MCshow
LTb
1.000 UP
1293 2254 M
[ [(Helvetica) 200.0 0.0 true true 0 (a=2.89x10)]
] -66.7 MLshow
1293 1971 M
[ [(Helvetica) 200.0 0.0 true true 0 (b=-2.75x10)]
[(Helvetica) 160.0 100.0 true true 0 (-1)]
] -86.7 MLshow
1293 1689 M
[ [(Helvetica) 200.0 0.0 true true 0 (c=2.89x10)]
[(Helvetica) 160.0 100.0 true true 0 (-3)]
] -86.7 MLshow
1293 1406 M
[ [(Helvetica) 200.0 0.0 true true 0 (d=-2.00x10)]
[(Helvetica) 160.0 100.0 true true 0 (-6)]
] -86.7 MLshow
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
5997 4637 M
[ [(Symbol) 200.0 0.0 true true 0 (c)]
[(Helvetica) 160.0 100.0 true true 0 (2)]
[(Helvetica) 200.0 0.0 true true 0 (/f)]
] -86.7 MRshow
LT0
1521 3522 Pls
1540 3481 Pls
1560 3441 Pls
1579 3404 Pls
1598 3367 Pls
1618 3332 Pls
1637 3298 Pls
1656 3265 Pls
1676 3234 Pls
1695 3203 Pls
1714 3173 Pls
1734 3144 Pls
1753 3115 Pls
1772 3088 Pls
1792 3061 Pls
1811 3035 Pls
1830 3009 Pls
1850 2985 Pls
1869 2961 Pls
1888 2937 Pls
1908 2914 Pls
1927 2892 Pls
1946 2870 Pls
1966 2849 Pls
1985 2828 Pls
2004 2808 Pls
2024 2789 Pls
2043 2770 Pls
2062 2751 Pls
2082 2733 Pls
2101 2716 Pls
2120 2699 Pls
2140 2682 Pls
2159 2666 Pls
2178 2651 Pls
2198 2636 Pls
2217 2622 Pls
2236 2607 Pls
2256 2594 Pls
2275 2581 Pls
2294 2568 Pls
2314 2556 Pls
2333 2544 Pls
2352 2533 Pls
2372 2522 Pls
2391 2512 Pls
2410 2502 Pls
2430 2492 Pls
2449 2483 Pls
2468 2474 Pls
2488 2466 Pls
2507 2458 Pls
2526 2451 Pls
2546 2444 Pls
2565 2437 Pls
2584 2431 Pls
2604 2425 Pls
2623 2419 Pls
2642 2414 Pls
2662 2410 Pls
2681 2405 Pls
2700 2401 Pls
2720 2397 Pls
2739 2394 Pls
2758 2391 Pls
2778 2389 Pls
2797 2386 Pls
2816 2384 Pls
2836 2383 Pls
2855 2381 Pls
2874 2380 Pls
2894 2380 Pls
2913 2379 Pls
2932 2379 Pls
2952 2379 Pls
2971 2380 Pls
2990 2381 Pls
3010 2382 Pls
3029 2383 Pls
3048 2385 Pls
3068 2387 Pls
3087 2389 Pls
3106 2391 Pls
3126 2394 Pls
3145 2397 Pls
3164 2400 Pls
3184 2403 Pls
3203 2407 Pls
3222 2411 Pls
3242 2415 Pls
3261 2419 Pls
3280 2423 Pls
3300 2428 Pls
3319 2433 Pls
3338 2438 Pls
3358 2443 Pls
3377 2449 Pls
3396 2455 Pls
3416 2460 Pls
3435 2466 Pls
3454 2473 Pls
3474 2479 Pls
3493 2486 Pls
3512 2492 Pls
3532 2499 Pls
3551 2506 Pls
3570 2513 Pls
3590 2521 Pls
3609 2528 Pls
3628 2536 Pls
3648 2543 Pls
3667 2551 Pls
3686 2559 Pls
3706 2567 Pls
3725 2575 Pls
3744 2584 Pls
3764 2592 Pls
3783 2601 Pls
3802 2609 Pls
3822 2618 Pls
3841 2627 Pls
3860 2636 Pls
3880 2645 Pls
3899 2654 Pls
3918 2663 Pls
3938 2672 Pls
3957 2681 Pls
3976 2690 Pls
3996 2699 Pls
4015 2708 Pls
4034 2717 Pls
4054 2725 Pls
4073 2734 Pls
4092 2743 Pls
4112 2751 Pls
4131 2759 Pls
4150 2768 Pls
4170 2776 Pls
4189 2784 Pls
4208 2792 Pls
4228 2800 Pls
4247 2808 Pls
4266 2816 Pls
4286 2824 Pls
4305 2832 Pls
4324 2839 Pls
4344 2847 Pls
4363 2854 Pls
4382 2862 Pls
4402 2869 Pls
4421 2876 Pls
4440 2884 Pls
4460 2891 Pls
4479 2898 Pls
4498 2905 Pls
4518 2911 Pls
4537 2918 Pls
4556 2925 Pls
4576 2932 Pls
4595 2939 Pls
4614 2945 Pls
4634 2952 Pls
4653 2959 Pls
4672 2965 Pls
4692 2972 Pls
4711 2978 Pls
4730 2985 Pls
4750 2991 Pls
4769 2998 Pls
4788 3004 Pls
4808 3011 Pls
4827 3017 Pls
4846 3023 Pls
4866 3030 Pls
4885 3036 Pls
4904 3042 Pls
4924 3048 Pls
4943 3054 Pls
4962 3061 Pls
4982 3067 Pls
5001 3073 Pls
5020 3079 Pls
5040 3085 Pls
5059 3091 Pls
5078 3097 Pls
5098 3103 Pls
5117 3108 Pls
5136 3114 Pls
5156 3120 Pls
5175 3126 Pls
5194 3132 Pls
5214 3137 Pls
5233 3143 Pls
5252 3149 Pls
5272 3155 Pls
5291 3160 Pls
5310 3166 Pls
5330 3172 Pls
5349 3177 Pls
5368 3183 Pls
5388 3188 Pls
5407 3194 Pls
5426 3199 Pls
5446 3205 Pls
5465 3210 Pls
5484 3216 Pls
5504 3221 Pls
5523 3227 Pls
5542 3232 Pls
5562 3237 Pls
5581 3243 Pls
5600 3248 Pls
5620 3253 Pls
5639 3259 Pls
5658 3264 Pls
5678 3269 Pls
5697 3275 Pls
5716 3280 Pls
5736 3285 Pls
5755 3290 Pls
5774 3295 Pls
5794 3301 Pls
5813 3306 Pls
5832 3311 Pls
5852 3316 Pls
5871 3321 Pls
5890 3326 Pls
5910 3332 Pls
5929 3337 Pls
5948 3342 Pls
5968 3347 Pls
5987 3352 Pls
6006 3357 Pls
6026 3362 Pls
6045 3367 Pls
6064 3371 Pls
6084 3376 Pls
6103 3381 Pls
6122 3386 Pls
6142 3391 Pls
6161 3396 Pls
6180 3400 Pls
6200 3405 Pls
6219 3410 Pls
6238 3415 Pls
6258 3419 Pls
6277 3424 Pls
6296 3429 Pls
6316 3433 Pls
6335 3438 Pls
6354 3443 Pls
6374 3447 Pls
6393 3452 Pls
6412 3457 Pls
6432 3461 Pls
6451 3466 Pls
6470 3470 Pls
6490 3475 Pls
6509 3479 Pls
6528 3484 Pls
6548 3488 Pls
6567 3493 Pls
6586 3497 Pls
6606 3502 Pls
6625 3506 Pls
6644 3511 Pls
6664 3515 Pls
6683 3519 Pls
6702 3524 Pls
6722 3528 Pls
6741 3533 Pls
6760 3537 Pls
6780 3541 Pls
6799 3546 Pls
6818 3550 Pls
6838 3554 Pls
6857 3559 Pls
6876 3563 Pls
6896 3568 Pls
6388 4637 Pls
1.000 UL
LT2
1100 4435 M
59 -151 V
58 -145 V
59 -137 V
58 -131 V
59 -125 V
59 -117 V
58 -112 V
59 -105 V
58 -99 V
59 -93 V
58 -88 V
59 -81 V
59 -77 V
58 -70 V
59 -66 V
58 -61 V
59 -55 V
59 -51 V
58 -47 V
59 -41 V
58 -38 V
59 -33 V
58 -29 V
59 -26 V
59 -21 V
58 -18 V
59 -14 V
58 -11 V
59 -8 V
59 -5 V
58 -1 V
59 1 V
58 3 V
59 6 V
59 9 V
58 10 V
59 13 V
58 15 V
59 16 V
58 18 V
59 20 V
59 21 V
58 22 V
59 23 V
58 24 V
59 25 V
59 25 V
58 26 V
59 27 V
58 26 V
59 27 V
58 26 V
59 26 V
59 26 V
58 26 V
59 24 V
58 24 V
59 23 V
59 22 V
58 21 V
59 19 V
58 18 V
59 16 V
58 14 V
59 13 V
59 10 V
58 8 V
59 6 V
58 3 V
59 0 V
59 -2 V
58 -5 V
59 -9 V
58 -11 V
59 -15 V
59 -19 V
58 -22 V
59 -26 V
58 -30 V
59 -34 V
58 -38 V
59 -43 V
59 -47 V
58 -52 V
59 -56 V
58 -62 V
59 -66 V
59 -72 V
58 -78 V
59 -82 V
58 -89 V
59 -94 V
58 -100 V
59 -107 V
59 -112 V
58 -119 V
59 -126 V
58 -132 V
59 -139 V
stroke
LTb
1100 4800 N
0 -3960 V
5800 0 V
0 3960 V
-5800 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
